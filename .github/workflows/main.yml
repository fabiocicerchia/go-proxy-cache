name: Builds

on:
  push:
    branches:
      - main
  pull_request:
    type:
      - opened
      - synchronize
  workflow_dispatch: ~

jobs:

  build-test:
    runs-on: ubuntu-20.04
    # container: docker:stable
    container: golang:alpine
    services:
      redis:
        image: redis:6.0.8-alpine3.12
        ports:
          - 6379/tcp
        options: >-
          --entrypoint redis-server
      nginx:
        image: fabiocicerchia/go-proxy-cache-test:latest
        ports:
          - "8080:80" # http
          - "8081:81" # ws
          - "8082:82" # wss
          - "8083:443" # https
        options: >-
          --link node
    steps:
      - uses: actions/checkout@v2

      # Ref: https://github.community/t/services-and-volumes/16313
      - name: Restart nginx
        uses: docker://docker
        with:
          args: docker restart "${{ job.services.nginx.id }}"

      - name: Service Logs - nginx
        uses: docker://docker
        with:
          args: docker logs "${{ job.services.nginx.id }}"

      - name: Install Dependencies
        run: |
          apk update
          apk add make gcc libc-dev redis curl bash

      - name: Build
        run: make build-race

      - name: Test
        run: |
          echo "127.0.0.1 testing.local www.testing.local" | tee -a /etc/hosts
          export REDIS_HOST=redis
          ./go-proxy-cache -debug -config=examples/config.no-docker.yml &
          make test

      - name: Coverage
        run: |
          echo "127.0.0.1 testing.local www.testing.local" | tee -a /etc/hosts
          export REDIS_HOST=redis
          make cover

      - name: Codecov
        run: make codecov

      #- name: CodeClimate
      #  run: make codeclimate

  sca:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: SCA
        continue-on-error: true
        run: make sca
