#                                                                         __
# .-----.-----.______.-----.----.-----.--.--.--.--.______.----.---.-.----|  |--.-----.
# |  _  |  _  |______|  _  |   _|  _  |_   _|  |  |______|  __|  _  |  __|     |  -__|
# |___  |_____|      |   __|__| |_____|__.__|___  |      |____|___._|____|__|__|_____|
# |_____|            |__|                   |_____|
#
# Copyright (c) 2020 Fabio Cicerchia. https://fabiocicerchia.it. MIT License
# Repo: https://github.com/fabiocicerchia/go-proxy-cache

version: '3.8'

services:
  go-proxy-cache:
    build:
      context: ../..
      dockerfile: Dockerfile
      network: host
      args:
        BUILD_CMD: build-race
    command: ["go-proxy-cache", "-debug"]
    environment:
      ENV: test
    depends_on:
      redis:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    ports:
      - "50080:50080"
      - "50443:50443"
    volumes:
      - ./config.yml:/app/config.yml
      - ./certs:/app/certs

  redis:
    image: redis:6.2.5-alpine3.14
    ports:
      - 6379:6379
    sysctls:
      # WARNING: The TCP backlog setting of 511 cannot be enforced because
      # /proc/sys/net/core/somaxconn is set to the lower value of 128.
      net.core.somaxconn: 1024
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
      network: host
    restart: always
    depends_on:
      jaeger:
        condition: service_healthy
    volumes:
      - ./nginx/vhost.conf:/etc/nginx/conf.d/vhost.conf
      - ./certs:/certs
    ports:
      - "40080:40080" # http
      - "40081:40081" # ws
      - "40082:40082" # wss
      - "40443:40443" # https

  node:
    image: node:16.7.0-alpine3.14
    restart: always
    command: "npm start"
    user: "1000:1000"
    working_dir: /home/app
    depends_on:
      jaeger:
        condition: service_healthy
    volumes:
      - ./:/home/app
    ports:
      - "9001:9001" # ws
      - "9002:9002" # wss

  jaeger:
    image: jaegertracing/all-in-one:1.26.0
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    healthcheck:
      test: ["CMD", "/go/bin/all-in-one-linux", "status"]
      timeout: 5s
      retries: 5
      start_period: 10s
